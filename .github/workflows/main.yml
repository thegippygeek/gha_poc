name: Docker - Build Images

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # schedule:
  #   - cron: '32 22 * * *'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Manual Run'
        required: false
        type: boolean

  push:
    branches: [ "hotfix/*"  ]
    # # Publish semver tags as releases.
    # tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

    
jobs:
  gitversion: 
    name: GitVersion 
    uses: thegippygeek/gha_poc/.github/workflows/gitversion.yml@v1.3.0

  build-base:
    name: Amazon Linux 2023
    needs: gitversion
    uses: thegippygeek/gha_poc/.github/workflows/build_image.yml@v1.3.0
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    with:
      Container_Registry: ${{ vars.CONTAINER_REGISTRY }}
      Container_Registry_Username: ${{ github.actor }}
      Container_Build_Target: al2023-base
      Image_Name: ${{ github.repository }}
      Image_Description: "Amazon Linux 2023 Base Image to build sdks/runtimes upon"
      GitVersion_FullSemVer: ${{ needs.gitversion.outputs.GitVersion_FullSemVer }}
      GitVersion_ShortSHA: ${{ needs.gitversion.outputs.GitVersion_ShortSHA }}
      GitVersion_MajorMinorPatch: ${{ needs.gitversion.outputs.GitVersion_MajorMinorPatch }}
    secrets:
      repo_pat: ${{ secrets.GITHUB_TOKEN }}
      
  build-dotnet-sdks-runtimes:
    needs: [gitversion, build-base]
    strategy:
      matrix:
        # target: [al2023-dotnet-sdk, al2023-dotnet-runtime]
        os: [al2023]
        lang: [dotnet]
        type: [sdk, runtime]
        dotnetVersion: ["6.0", "8.0"]
    name: AL2023 Dotnet ${{ matrix.dotnetVersion }}                              
    uses: thegippygeek/gha_poc/.github/workflows/build_image.yml@v1.3.0
    permissions:
          contents: read
          packages: write
          # This is used to complete the identity challenge
          # with sigstore/fulcio when running outside of PRs.
          id-token: write
    with:
        Container_Registry: ${{ vars.CONTAINER_REGISTRY }}
        Container_Registry_Username: ${{ github.actor }}
        Container_Build_Target: ${{ matrix.os }}-${{ matrix.lang }}-${{ matrix.type }}
        Image_Name: ${{ github.repository }}-${{ matrix.os }}-${{ matrix.lang }}-${{ matrix.type }}-${{ matrix.dotnetVersion }}
        Image_Description: "Amazon Linux 2023 with Dotnet ${{ matrix.dotnetVersion }}"
        GitVersion_FullSemVer: ${{needs.gitversion.outputs.GitVersion_FullSemVer}}
        GitVersion_ShortSHA: ${{ needs.gitversion.outputs.GitVersion_ShortSHA }}
        GitVersion_MajorMinorPatch: ${{ needs.gitversion.outputs.GitVersion_MajorMinorPatch }}
        Build_Args: DOTNET_VERSION=${{ matrix.dotnetVersion }}
    secrets:
        repo_pat: ${{ secrets.GITHUB_TOKEN }}


  build-nodejs:
    name: AL2023 NodeJS
    needs: [gitversion, build-base]
    strategy:
        matrix:
            target: [al2023-nodejs]  
    uses: thegippygeek/gha_poc/.github/workflows/build_image.yml@v1.3.0
    permissions:
          contents: read
          packages: write
          # This is used to complete the identity challenge
          # with sigstore/fulcio when running outside of PRs.
          id-token: write
    with:
        Container_Registry: ${{ vars.CONTAINER_REGISTRY }}
        Container_Registry_Username: ${{ github.actor }}
        Container_Build_Target: ${{ matrix.target }}
        Image_Name: ${{ github.repository }}-${{ matrix.target}}
        Image_Description: "Amazon Linux 2023 with NodeJS"
        GitVersion_FullSemVer: ${{needs.gitversion.outputs.GitVersion_FullSemVer}}
        GitVersion_ShortSHA: ${{ needs.gitversion.outputs.GitVersion_ShortSHA }}
        GitVersion_MajorMinorPatch: ${{ needs.gitversion.outputs.GitVersion_MajorMinorPatch }}
        Build_Args: NODE_VERSION=NOTSET 
    secrets:
        repo_pat: ${{ secrets.GITHUB_TOKEN }}
